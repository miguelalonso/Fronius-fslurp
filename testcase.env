#!/bin/bash
#
# fslurp, Copyright (c) 2012 David Stone <ds.fslurp@asif.com>
#
# $RCSfile: testcase.env,v $
# $Revision: 1.2 $
# $Date: 2012/10/20 01:37:07 $
#
# Permission to use, copy, modify, distribute, and sell this software and its
# documentation for any purpose is hereby granted without fee, provided that
# the above copyright notice appear in all copies and that both the
# copyright notice and this permission notice appear in supporting
# documentation.  No representations are made about the suitability of this
# software for any purpose.  It is provided "as is" without express or 
# implied warranty.
#

# Support functions for testcase.sh

CurrentCommand=
CommandOutputFile=test.output

Failed()
{
	echo FAILED testing $CurrentCommand
	echo $*
	echo Command output:
	cat $CommandOutputFile
	return 1
}

#
# Is there a header record and at least one device record?
# Do all records have some minimal number of fields?
# Does the header record start with a Time field?
# Are any header fields repeated?
# Do all records have the same number of fields?
#
WellFormed()
{
	typeset -a lines=
	typeset -a fields=
	typeset oldIFS=$IFS

	CurrentCommand="$* -d, -H"

	$CurrentCommand > $CommandOutputFile 2>&1
	typeset exitCode=$?

	if [ $exitCode != 0 ]
	then
		Failed unexpected exit code : $exitCode
		return 1
	fi

	readarray -t lines < $CommandOutputFile

	typeset numRecords=${#lines[*]}

	if [ $numRecords -lt 2 ]
	then
		Failed not enough lines of output
		return 1
	fi

	typeset headerLine=${lines[0]}
	IFS=',' read -a fields <<< "$headerLine"

	typeset numHeaderFields=${#fields[*]}

	# No report has less than 9 fields (this is a hack)
	if [ $numHeaderFields -lt 9 ]
	then
		Failed not enough header fields "($numHeaderFields)"
		return 1
	fi

	if [ ${fields[0]} != "Time" ]
	then
		Failed first header field is not Time
		return 1
	fi

	typeset outerIndex=0

	while [ $outerIndex -lt $numHeaderFields ]
	do
		typeset outerField=${fields[$outerIndex]}
		typeset innerIndex=0

		while [ $innerIndex -lt $numHeaderFields ]
		do
			if [ $outerIndex -ne $innerIndex ]
			then
				if [ "$outerField" = "${fields[$innerIndex]}" ]
				then
					Failed header field $outerIndex is \
						repeated in field $innerIndex 
					return 1
				fi
			fi

			innerIndex=$(($innerIndex + 1))
		done

		outerIndex=$(($outerIndex + 1))
	done

	typeset recordNum=1

	while [ $recordNum -lt $numRecords ]
	do
		typeset -a recordFields
		IFS=',' read -a recordFields <<< "${lines[$recordNum]}"

		typeset numRecordFields=${#recordFields[*]}

		if [ $numRecordFields -ne $numHeaderFields ]
		then
			Failed mismatch between number of header fields \
				"($numHeaderFields)" and number of record \
				fields "($numRecordFields)"
			return 1
		fi

		recordNum=$(($recordNum + 1))
	done

	IFS=$oldIFS

	return 0
}

HeaderOnly()
{
	CurrentCommand=$*

	$CurrentCommand -H -d, > $CommandOutputFile 2>&1
	exitCode=$?

	if [ $exitCode != 0 ]
	then
		Failed unexpected exit code : $exitCode
		return 1
	fi

	readarray -t lines < $CommandOutputFile

	typeset numRecords=${#lines[*]}

	if [ $numRecords -lt 1 ]
	then
		Failed not the expected one line of output
		return 1
	fi

	typeset headerLine=${lines[0]}
	IFS=',' read -a fields <<< "$headerLine"

	typeset numHeaderFields=${#fields[*]}

	# No report has less than 9 fields (this is a hack)
	if [ $numHeaderFields -lt 9 ]
	then
		Failed not enough header fields "($numHeaderFields)"
		return 1
	fi

	if [ ${fields[0]} != "Time" ]
	then
		Failed first header field is not Time
		return 1
	fi

	return  0
}

NoOutput()
{
	CurrentCommand=$*

	$CurrentCommand > $CommandOutputFile 2>&1
	exitCode=$?

	if [ $exitCode != 0 ]
	then
		Failed unexpected exit code : $exitCode
		return 1
	fi

	if [ -s $CommandOutputFile ]
	then
		Failed unexpected output
		return 1
	fi

	return  0
}

