VersiÃ³n de fslurp para inversores fronius de la terraza.
llamada online
/home/u4477/fslurp/fslurp -b 19200 -r all -d , -p /dev/ttyS1

ver --> sendtoemoncms.sh
(lee los datos, los almacena en ficheros /home/u4477/fslurp/data)

para arrancarlo se hace con un cron. 

sudo crontab -e

* * * * * /home/u4477/fslurp/fslurp2emoncms.sh
*/5 * * * * /home/u4477/fslurp/fslurp2dataciemat.sh

la tarea fslurp2dataciemat creo ficheros de datos cada 5 minutos, con formato de fecha leible por humano

$ cd /wherever/you/put/it/fslurp-0.5
$ make clobber
$ make

And then to run it, from the same directory:

$ ./fslurp -h

This will display the following help message:

Usage: ./fslurp [-b baud][-d delimiter][-H][-h][-p device][-r report][-v]
-b baud Set the baud rate. Supported rates are:
2400, 4800, 9600, and 19200. Defaults to 9600.
-d delimter Set delimiter for CSV-style output. The
default is no delimiter, human-readable.
-H Display the delimited output header for the
current reporting mode. The -d option must
also be set.
-h Display this help message.
-p device Set the serial port device. Defaults to /dev/ttyS0.
-r report Set report type. Supported types are:
now, day, total, and all Defaults to now.
-v Enable verbose, debugging output.

Return codes:
0 Success.
1 Communications failure.
2 No active inverter found.
3 Usage error.
4 Fronius protocol error.

#=====================================================================================
del github original fslurp
#=====================================================================================
$RCSfile: README,v $
$Revision: 1.3 $
$Date: 2013/11/17 00:16:12 $

Introduction
============
fslurp is a program to pull the data from a Fronius inverter systems
via a serial port connection.

It supports both single and multiple inverter systems through the
Interface Card Easy and the Fronius Interface Card/DataLogger Box. Fronius
Sensor Card devices are also supported.

It supports both human-readable and delimited (CSV-style) text output.

Sample output can be seen by building project and exercising one
of the test simulator targets (e.g. simIFCEasy).

It is written in C++ and has been compiled on Linux.

Building
========

The GNU C++ compiler and the GNU make program
are required for building fslurp.

Un-tar the source.
cd to the top level directory extracted.
Type make to build.

Installing and running
======================

The fslurp binary requires no external files and can be run
from anywhere.  Copy it to wherever as appropriate.

Testing
=======

In addition to fslurp, the makefile builds several simulator versions
of fslurp (e.g. simIFCEasy). The simulators are identical to fslurp,
except that they each replace the serial communications with simulated
canned responses for a particular Fronius installation configuration.

The test target in the makefile exercises fslurp via these simulators.

David Stone
ds.fslurp@asif.com
